
AVRASM ver. 2.1.30  G:\J\Code DHT11\Debug\List\dht11-code.asm Sun Jan 08 00:09:04 2023

G:\J\Code DHT11\Debug\List\dht11-code.asm(1088): warning: Register r5 already defined by the .DEF directive
G:\J\Code DHT11\Debug\List\dht11-code.asm(1089): warning: Register r4 already defined by the .DEF directive
G:\J\Code DHT11\Debug\List\dht11-code.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 3a54
000034 3025
000035 6432
000036 0909      	.DB  0x54,0x3A,0x25,0x30,0x32,0x64,0x9,0x9
000037 6573
000038 2874
000039 2954
00003a 253a      	.DB  0x73,0x65,0x74,0x28,0x54,0x29,0x3A,0x25
00003b 3230
00003c 0d64
00003d 480a
00003e 253a      	.DB  0x30,0x32,0x64,0xD,0xA,0x48,0x3A,0x25
00003f 3230
000040 0964
000041 7309
000042 7465      	.DB  0x30,0x32,0x64,0x9,0x9,0x73,0x65,0x74
000043 4828
000044 3a29
000045 3025
000046 6432      	.DB  0x28,0x48,0x29,0x3A,0x25,0x30,0x32,0x64
G:\J\Code DHT11\Debug\List\dht11-code.asm(1133): warning: .cseg .db misalignment - padding zero byte
000047 0000      	.DB  0x0
                 _0x2000003:
000048 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000049 0002      	.DW  0x02
00004a 0160      	.DW  __base_y_G100
00004b 0090      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
00004c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004d 94f8      	CLI
00004e 27ee      	CLR  R30
00004f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000050 e0f1      	LDI  R31,1
000051 bffb      	OUT  GICR,R31
000052 bfeb      	OUT  GICR,R30
000053 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000054 e08d      	LDI  R24,(14-2)+1
000055 e0a2      	LDI  R26,2
000056 27bb      	CLR  R27
                 __CLEAR_REG:
000057 93ed      	ST   X+,R30
000058 958a      	DEC  R24
000059 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005b e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005d 93ed      	ST   X+,R30
00005e 9701      	SBIW R24,1
00005f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000060 e9e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000061 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000062 9185      	LPM  R24,Z+
000063 9195      	LPM  R25,Z+
000064 9700      	SBIW R24,0
000065 f061      	BREQ __GLOBAL_INI_END
000066 91a5      	LPM  R26,Z+
000067 91b5      	LPM  R27,Z+
000068 9005      	LPM  R0,Z+
000069 9015      	LPM  R1,Z+
00006a 01bf      	MOVW R22,R30
00006b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006c 9005      	LPM  R0,Z+
00006d 920d      	ST   X+,R0
00006e 9701      	SBIW R24,1
00006f f7e1      	BRNE __GLOBAL_INI_LOOP
000070 01fb      	MOVW R30,R22
000071 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000072 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000073 bfed      	OUT  SPL,R30
000074 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000075 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000076 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000077 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000078 940c 007a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <mega16.h>
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;
                 ;
                 ;#define DHT11_PORT PORTA
                 ;#define DHT11_PORTPIN PORTA1
                 ;#define DHT11_DDR DDRA
                 ;#define DHT11_DDRPIN DDA1
                 ;#define DHT11_PINPORT PINA
                 ;#define DHT11_PIN PINA1
                 ;
                 ;#define DHT11_INPUT_MODE() DHT11_DDR&=~(1<<DHT11_DDRPIN)
                 ;#define DHT11_OUTPUT_MODE() DHT11_DDR|=(1<<DHT11_DDRPIN)
                 ;#define DHT11_LOW() DHT11_PORT&=~(1<<DHT11_PORTPIN)
                 ;#define DHT11_HIGH() DHT11_PORT|=(1<<DHT11_PORTPIN)
                 ;
                 ;#define DHTLIB_OK                               0
                 ;#define DHTLIB_ERROR_CHECKSUM                    -1
                 ;#define DHTLIB_ERROR_TIMEOUT                    -2
                 ;
                 ;int read_dht11(int *temp,int *humidity);
                 ;
                 ;void main(void)
                 ; 0000 001B {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 001C     char lcd_buff[40];
                 ; 0000 001D     int temp=0 , humidity=0 , status=0 , valtemp=0 , valhumidity=0 ;
                 ; 0000 001E     DDRC=0XFF;
00007a 97ac      	SBIW R28,44
00007b 940e 03fd 	CALL SUBOPT_0x0
                 ;	lcd_buff -> Y+4
                 ;	temp -> R16,R17
                 ;	humidity -> R18,R19
                 ;	status -> R20,R21
                 ;	valtemp -> Y+2
                 ;	valhumidity -> Y+0
                +
00007d e000     +LDI R16 , LOW ( 0 )
00007e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00007f e020     +LDI R18 , LOW ( 0 )
000080 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000081 e040     +LDI R20 , LOW ( 0 )
000082 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000083 efef      	LDI  R30,LOW(255)
000084 bbe4      	OUT  0x14,R30
                 ; 0000 001F     PORTC=0XFF;
000085 bbe5      	OUT  0x15,R30
                 ; 0000 0020     DDRB=0X00;
000086 e0e0      	LDI  R30,LOW(0)
000087 bbe7      	OUT  0x17,R30
                 ; 0000 0021 
                 ; 0000 0022     lcd_init(16);
000088 e1a0      	LDI  R26,LOW(16)
000089 d183      	RCALL _lcd_init
                 ; 0000 0023 
                 ; 0000 0024     while (1)
                 _0x3:
                 ; 0000 0025     {
                 ; 0000 0026         status=read_dht11(&temp,&humidity);
00008a b7ed      	IN   R30,SPL
00008b b7fe      	IN   R31,SPH
00008c 9731      	SBIW R30,1
00008d 93fa      	ST   -Y,R31
00008e 93ea      	ST   -Y,R30
00008f 931f      	PUSH R17
000090 930f      	PUSH R16
000091 b7ad      	IN   R26,SPL
000092 b7be      	IN   R27,SPH
000093 9711      	SBIW R26,1
000094 933f      	PUSH R19
000095 932f      	PUSH R18
000096 d059      	RCALL _read_dht11
000097 912f      	POP  R18
000098 913f      	POP  R19
000099 910f      	POP  R16
00009a 911f      	POP  R17
00009b 01af      	MOVW R20,R30
                 ; 0000 0027         sprintf(lcd_buff,"T:%02d\t\tset(T):%02d\r\nH:%02d\t\tset(H):%02d" , temp , valtemp , humidity , valhumidity);
00009c 01fe      	MOVW R30,R28
00009d 9634      	ADIW R30,4
00009e 93fa      	ST   -Y,R31
00009f 93ea      	ST   -Y,R30
                +
0000a0 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000a1 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000a2 93fa      	ST   -Y,R31
0000a3 93ea      	ST   -Y,R30
0000a4 01f8      	MOVW R30,R16
0000a5 940e 0403 	CALL SUBOPT_0x1
0000a7 85ea      	LDD  R30,Y+10
0000a8 85fb      	LDD  R31,Y+10+1
0000a9 940e 0403 	CALL SUBOPT_0x1
0000ab 01f9      	MOVW R30,R18
0000ac 940e 0403 	CALL SUBOPT_0x1
0000ae 89e8      	LDD  R30,Y+16
0000af 89f9      	LDD  R31,Y+16+1
0000b0 940e 0403 	CALL SUBOPT_0x1
0000b2 e180      	LDI  R24,16
0000b3 940e 03b0 	CALL _sprintf
0000b5 9664      	ADIW R28,20
                 ; 0000 0028         lcd_clear();
0000b6 d124      	RCALL _lcd_clear
                 ; 0000 0029         lcd_puts(lcd_buff);
0000b7 01de      	MOVW R26,R28
0000b8 9614      	ADIW R26,4
0000b9 d142      	RCALL _lcd_puts
                 ; 0000 002A         delay_ms(1);
0000ba e0a1      	LDI  R26,LOW(1)
0000bb e0b0      	LDI  R27,0
0000bc 940e 0442 	CALL _delay_ms
                 ; 0000 002B         lcd_gotoxy(0,1);
0000be e0e0      	LDI  R30,LOW(0)
0000bf 93ea      	ST   -Y,R30
0000c0 e0a1      	LDI  R26,LOW(1)
0000c1 d10c      	RCALL _lcd_gotoxy
                 ; 0000 002C         if (PINB.0==1)
0000c2 9bb0      	SBIS 0x16,0
0000c3 c00c      	RJMP _0x6
                 ; 0000 002D         {
                 ; 0000 002E             valtemp++;
0000c4 81ea      	LDD  R30,Y+2
0000c5 81fb      	LDD  R31,Y+2+1
0000c6 9631      	ADIW R30,1
0000c7 83ea      	STD  Y+2,R30
0000c8 83fb      	STD  Y+2+1,R31
                 ; 0000 002F             if (valtemp==40)
0000c9 81aa      	LDD  R26,Y+2
0000ca 81bb      	LDD  R27,Y+2+1
0000cb 9798      	SBIW R26,40
0000cc f419      	BRNE _0x7
                 ; 0000 0030             {
                 ; 0000 0031                 valtemp=0;
0000cd e0e0      	LDI  R30,LOW(0)
0000ce 83ea      	STD  Y+2,R30
0000cf 83eb      	STD  Y+2+1,R30
                 ; 0000 0032             }
                 ; 0000 0033         }
                 _0x7:
                 ; 0000 0034         if (PINB.1==1)
                 _0x6:
0000d0 9bb1      	SBIS 0x16,1
0000d1 c00e      	RJMP _0x8
                 ; 0000 0035         {
                 ; 0000 0036             valhumidity++;
0000d2 81e8      	LD   R30,Y
0000d3 81f9      	LDD  R31,Y+1
0000d4 9631      	ADIW R30,1
0000d5 83e8      	ST   Y,R30
0000d6 83f9      	STD  Y+1,R31
                 ; 0000 0037             if (valhumidity==70)
0000d7 81a8      	LD   R26,Y
0000d8 81b9      	LDD  R27,Y+1
0000d9 34a6      	CPI  R26,LOW(0x46)
0000da e0e0      	LDI  R30,HIGH(0x46)
0000db 07be      	CPC  R27,R30
0000dc f419      	BRNE _0x9
                 ; 0000 0038             {
                 ; 0000 0039                 valhumidity=0;
0000dd e0e0      	LDI  R30,LOW(0)
0000de 83e8      	STD  Y+0,R30
0000df 83e9      	STD  Y+0+1,R30
                 ; 0000 003A             }
                 ; 0000 003B         }
                 _0x9:
                 ; 0000 003C         if (PINB.2==1)
                 _0x8:
0000e0 9bb2      	SBIS 0x16,2
0000e1 c005      	RJMP _0xA
                 ; 0000 003D         {
                 ; 0000 003E             valtemp--;
0000e2 81ea      	LDD  R30,Y+2
0000e3 81fb      	LDD  R31,Y+2+1
0000e4 9731      	SBIW R30,1
0000e5 83ea      	STD  Y+2,R30
0000e6 83fb      	STD  Y+2+1,R31
                 ; 0000 003F         }
                 ; 0000 0040         if (PINB.3==1)
                 _0xA:
0000e7 9bb3      	SBIS 0x16,3
0000e8 c005      	RJMP _0xB
                 ; 0000 0041         {
                 ; 0000 0042             valhumidity--;
0000e9 81e8      	LD   R30,Y
0000ea 81f9      	LDD  R31,Y+1
0000eb 9731      	SBIW R30,1
0000ec 83e8      	ST   Y,R30
0000ed 83f9      	STD  Y+1,R31
                 ; 0000 0043         }
                 ; 0000 0044     }
                 _0xB:
0000ee cf9b      	RJMP _0x3
                 ; 0000 0045 }
                 _0xC:
0000ef cfff      	RJMP _0xC
                 ; .FEND
                 ;
                 ;// read_dht11 functions
                 ;// read_dht11 functions
                 ;int read_dht11(int *temp,int *humidity)
                 ; 0000 004A {
                 _read_dht11:
                 ; .FSTART _read_dht11
                 ; 0000 004B     unsigned char bytes[5];
                 ; 0000 004C     unsigned char sum;
                 ; 0000 004D     unsigned int bitcount=8;
                 ; 0000 004E     unsigned int loopcount=0;
                 ; 0000 004F     unsigned int byteid=0;
                 ; 0000 0050     int i=0;
                 ; 0000 0051     // EMPTY BUFFER
                 ; 0000 0052     for (i=0; i< 5; i++) bytes[i] = 0;
0000f0 93ba      	ST   -Y,R27
0000f1 93aa      	ST   -Y,R26
0000f2 9729      	SBIW R28,9
0000f3 940e 03fd 	CALL SUBOPT_0x0
0000f5 940e 046e 	CALL __SAVELOCR6
                 ;	*temp -> Y+17
                 ;	*humidity -> Y+15
                 ;	bytes -> Y+10
                 ;	sum -> R17
                 ;	bitcount -> R18,R19
                 ;	loopcount -> R20,R21
                 ;	byteid -> Y+8
                 ;	i -> Y+6
                +
0000f7 e028     +LDI R18 , LOW ( 8 )
0000f8 e030     +LDI R19 , HIGH ( 8 )
                 	__GETWRN 18,19,8
                +
0000f9 e040     +LDI R20 , LOW ( 0 )
0000fa e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0000fb e0e0      	LDI  R30,LOW(0)
0000fc 83ee      	STD  Y+6,R30
0000fd 83ef      	STD  Y+6+1,R30
                 _0xE:
0000fe 81ae      	LDD  R26,Y+6
0000ff 81bf      	LDD  R27,Y+6+1
000100 9715      	SBIW R26,5
000101 f474      	BRGE _0xF
000102 81ee      	LDD  R30,Y+6
000103 81ff      	LDD  R31,Y+6+1
000104 01de      	MOVW R26,R28
000105 961a      	ADIW R26,10
000106 0fae      	ADD  R26,R30
000107 1fbf      	ADC  R27,R31
000108 e0e0      	LDI  R30,LOW(0)
000109 93ec      	ST   X,R30
00010a 81ee      	LDD  R30,Y+6
00010b 81ff      	LDD  R31,Y+6+1
00010c 9631      	ADIW R30,1
00010d 83ee      	STD  Y+6,R30
00010e 83ff      	STD  Y+6+1,R31
00010f cfee      	RJMP _0xE
                 _0xF:
                 ; 0000 0054 DDRA|=(1<<1       );
000110 9ad1      	SBI  0x1A,1
                 ; 0000 0055     DHT11_LOW();
000111 98d9      	CBI  0x1B,1
                 ; 0000 0056     delay_ms(20);
000112 e1a4      	LDI  R26,LOW(20)
000113 e0b0      	LDI  R27,0
000114 940e 0442 	CALL _delay_ms
                 ; 0000 0057     DHT11_HIGH();
000116 9ad9      	SBI  0x1B,1
                 ; 0000 0058     delay_us(2);
                +
000117 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000118 958a     +DEC R24
000119 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                 ; 0000 0059     DHT11_INPUT_MODE();
00011a 98d1      	CBI  0x1A,1
                 ; 0000 005A     DHT11_LOW();
00011b 98d9      	CBI  0x1B,1
                 ; 0000 005B     loopcount=0;
                +
00011c e040     +LDI R20 , LOW ( 0 )
00011d e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 ; 0000 005C     while(!(DHT11_PINPORT&(1<<DHT11_PIN)))
                 _0x10:
00011e 99c9      	SBIC 0x19,1
00011f c006      	RJMP _0x12
                 ; 0000 005D     { //pin is low
                 ; 0000 005E         delay_us(40);
                +
000120 e68b     +LDI R24 , LOW ( 107 )
                +__DELAY_USB_LOOP :
000121 958a     +DEC R24
000122 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 107
                 ; 0000 005F         loopcount++;
                +
000123 5f4f     +SUBI R20 , LOW ( - 1 )
000124 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0000 0060     }
000125 cff8      	RJMP _0x10
                 _0x12:
                 ; 0000 0061     if (loopcount>80) return DHTLIB_ERROR_TIMEOUT;
                +
000126 3541     +CPI R20 , LOW ( 81 )
000127 e0e0     +LDI R30 , HIGH ( 81 )
000128 075e     +CPC R21 , R30
                 	__CPWRN 20,21,81
000129 f018      	BRLO _0x13
00012a efee      	LDI  R30,LOW(65534)
00012b efff      	LDI  R31,HIGH(65534)
00012c c06c      	RJMP _0x2080003
                 ; 0000 0062     loopcount=0;
                 _0x13:
                +
00012d e040     +LDI R20 , LOW ( 0 )
00012e e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 ; 0000 0063     while((DHT11_PINPORT&(1<<DHT11_PIN)))
                 _0x14:
00012f 9bc9      	SBIS 0x19,1
000130 c006      	RJMP _0x16
                 ; 0000 0064     { //pin is high
                 ; 0000 0065         delay_us(1);
                +
000131 e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
000132 958a     +DEC R24
000133 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0000 0066         loopcount++;
                +
000134 5f4f     +SUBI R20 , LOW ( - 1 )
000135 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0000 0067     }
000136 cff8      	RJMP _0x14
                 _0x16:
                 ; 0000 0068      if (loopcount>80) return DHTLIB_ERROR_TIMEOUT;
                +
000137 3541     +CPI R20 , LOW ( 81 )
000138 e0e0     +LDI R30 , HIGH ( 81 )
000139 075e     +CPC R21 , R30
                 	__CPWRN 20,21,81
00013a f018      	BRLO _0x17
00013b efee      	LDI  R30,LOW(65534)
00013c efff      	LDI  R31,HIGH(65534)
00013d c05b      	RJMP _0x2080003
                 ; 0000 0069     for(i=0;i<40;i++)
                 _0x17:
00013e e0e0      	LDI  R30,LOW(0)
00013f 83ee      	STD  Y+6,R30
000140 83ef      	STD  Y+6+1,R30
                 _0x19:
000141 81ae      	LDD  R26,Y+6
000142 81bf      	LDD  R27,Y+6+1
000143 9798      	SBIW R26,40
000144 f5bc      	BRGE _0x1A
                 ; 0000 006A     {
                 ; 0000 006B         loopcount=0;
                +
000145 e040     +LDI R20 , LOW ( 0 )
000146 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 ; 0000 006C         while(!(DHT11_PINPORT&(1<<DHT11_PIN))){}
                 _0x1B:
000147 9bc9      	SBIS 0x19,1
000148 cffe      	RJMP _0x1B
                 ; 0000 006D         while((DHT11_PINPORT&(1<<DHT11_PIN)) && loopcount<100){loopcount++;delay_us(1);}
                 _0x1E:
000149 9bc9      	SBIS 0x19,1
00014a c004      	RJMP _0x21
                +
00014b 3644     +CPI R20 , LOW ( 100 )
00014c e0e0     +LDI R30 , HIGH ( 100 )
00014d 075e     +CPC R21 , R30
                 	__CPWRN 20,21,100
00014e f008      	BRLO _0x22
                 _0x21:
00014f c006      	RJMP _0x20
                 _0x22:
                +
000150 5f4f     +SUBI R20 , LOW ( - 1 )
000151 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                +
000152 e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
000153 958a     +DEC R24
000154 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
000155 cff3      	RJMP _0x1E
                 _0x20:
                 ; 0000 006E         if(loopcount>15)
                +
000156 3140     +CPI R20 , LOW ( 16 )
000157 e0e0     +LDI R30 , HIGH ( 16 )
000158 075e     +CPC R21 , R30
                 	__CPWRN 20,21,16
000159 f078      	BRLO _0x23
                 ; 0000 006F         bytes[byteid] |= (1 << bitcount);
00015a 85e8      	LDD  R30,Y+8
00015b 85f9      	LDD  R31,Y+8+1
00015c 01de      	MOVW R26,R28
00015d 961a      	ADIW R26,10
00015e 0fea      	ADD  R30,R26
00015f 1ffb      	ADC  R31,R27
000160 01bf      	MOVW R22,R30
000161 8010      	LD   R1,Z
000162 2fe2      	MOV  R30,R18
000163 e0a1      	LDI  R26,LOW(1)
000164 940e 0454 	CALL __LSLB12
000166 29e1      	OR   R30,R1
000167 01db      	MOVW R26,R22
000168 93ec      	ST   X,R30
                 ; 0000 0070         if (bitcount == 0)   // next byte?
                 _0x23:
000169 2e02      	MOV  R0,R18
00016a 2a03      	OR   R0,R19
00016b f441      	BRNE _0x24
                 ; 0000 0071         {
                 ; 0000 0072             bitcount = 7;    // restart at MSB
                +
00016c e027     +LDI R18 , LOW ( 7 )
00016d e030     +LDI R19 , HIGH ( 7 )
                 	__GETWRN 18,19,7
                 ; 0000 0073             byteid++;      // next byte!
00016e 85e8      	LDD  R30,Y+8
00016f 85f9      	LDD  R31,Y+8+1
000170 9631      	ADIW R30,1
000171 87e8      	STD  Y+8,R30
000172 87f9      	STD  Y+8+1,R31
                 ; 0000 0074         }
                 ; 0000 0075         else bitcount--;
000173 c002      	RJMP _0x25
                 _0x24:
                +
000174 5021     +SUBI R18 , LOW ( 1 )
000175 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0000 0076     }
                 _0x25:
000176 81ee      	LDD  R30,Y+6
000177 81ff      	LDD  R31,Y+6+1
000178 9631      	ADIW R30,1
000179 83ee      	STD  Y+6,R30
00017a 83ff      	STD  Y+6+1,R31
00017b cfc5      	RJMP _0x19
                 _0x1A:
                 ; 0000 0077     *humidity    = bytes[0];
00017c 85ea      	LDD  R30,Y+10
00017d 85af      	LDD  R26,Y+15
00017e 89b8      	LDD  R27,Y+15+1
00017f e0f0      	LDI  R31,0
000180 93ed      	ST   X+,R30
000181 93fc      	ST   X,R31
                 ; 0000 0078     *temp = bytes[2];
000182 85ec      	LDD  R30,Y+12
000183 89a9      	LDD  R26,Y+17
000184 89ba      	LDD  R27,Y+17+1
000185 e0f0      	LDI  R31,0
000186 93ed      	ST   X+,R30
000187 93fc      	ST   X,R31
                 ; 0000 0079     sum = (bytes[0] + bytes[1]+ bytes[2]+ bytes[3])&0xff;
000188 85eb      	LDD  R30,Y+11
000189 85aa      	LDD  R26,Y+10
00018a 0fea      	ADD  R30,R26
00018b 85ac      	LDD  R26,Y+12
00018c 0fea      	ADD  R30,R26
00018d 85ad      	LDD  R26,Y+13
00018e 0fae      	ADD  R26,R30
00018f 2fea      	MOV  R30,R26
000190 2f1e      	MOV  R17,R30
                 ; 0000 007A     if (bytes[4] != sum) return DHTLIB_ERROR_CHECKSUM;
000191 85ae      	LDD  R26,Y+14
000192 171a      	CP   R17,R26
000193 f019      	BREQ _0x26
000194 efef      	LDI  R30,LOW(65535)
000195 efff      	LDI  R31,HIGH(65535)
000196 c002      	RJMP _0x2080003
                 ; 0000 007B     return DHTLIB_OK;
                 _0x26:
000197 e0e0      	LDI  R30,LOW(0)
000198 e0f0      	LDI  R31,HIGH(0)
                 _0x2080003:
000199 940e 0475 	CALL __LOADLOCR6
00019b 9663      	ADIW R28,19
00019c 9508      	RET
                 ; 0000 007C }
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
00019d 93aa      	ST   -Y,R26
00019e 81e8      	LD   R30,Y
00019f 71e0      	ANDI R30,LOW(0x10)
0001a0 f011      	BREQ _0x2000004
0001a1 9a93      	SBI  0x12,3
0001a2 c001      	RJMP _0x2000005
                 _0x2000004:
0001a3 9893      	CBI  0x12,3
                 _0x2000005:
0001a4 81e8      	LD   R30,Y
0001a5 72e0      	ANDI R30,LOW(0x20)
0001a6 f011      	BREQ _0x2000006
0001a7 9a92      	SBI  0x12,2
0001a8 c001      	RJMP _0x2000007
                 _0x2000006:
0001a9 9892      	CBI  0x12,2
                 _0x2000007:
0001aa 81e8      	LD   R30,Y
0001ab 74e0      	ANDI R30,LOW(0x40)
0001ac f011      	BREQ _0x2000008
0001ad 9a91      	SBI  0x12,1
0001ae c001      	RJMP _0x2000009
                 _0x2000008:
0001af 9891      	CBI  0x12,1
                 _0x2000009:
0001b0 81e8      	LD   R30,Y
0001b1 78e0      	ANDI R30,LOW(0x80)
0001b2 f011      	BREQ _0x200000A
0001b3 9a90      	SBI  0x12,0
0001b4 c001      	RJMP _0x200000B
                 _0x200000A:
0001b5 9890      	CBI  0x12,0
                 _0x200000B:
                +
0001b6 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0001b7 958a     +DEC R24
0001b8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0001b9 9a94      	SBI  0x12,4
                +
0001ba e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0001bb 958a     +DEC R24
0001bc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0001bd 9894      	CBI  0x12,4
                +
0001be e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0001bf 958a     +DEC R24
0001c0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0001c1 c078      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0001c2 93aa      	ST   -Y,R26
0001c3 81a8      	LD   R26,Y
0001c4 dfd8      	RCALL __lcd_write_nibble_G100
0001c5 81e8          ld    r30,y
0001c6 95e2          swap  r30
0001c7 83e8          st    y,r30
0001c8 81a8      	LD   R26,Y
0001c9 dfd3      	RCALL __lcd_write_nibble_G100
                +
0001ca e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0001cb 958a     +DEC R24
0001cc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0001cd c06c      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0001ce 93aa      	ST   -Y,R26
0001cf 81e8      	LD   R30,Y
0001d0 e0f0      	LDI  R31,0
0001d1 5ae0      	SUBI R30,LOW(-__base_y_G100)
0001d2 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0001d3 81e0      	LD   R30,Z
0001d4 81a9      	LDD  R26,Y+1
0001d5 0fae      	ADD  R26,R30
0001d6 dfeb      	RCALL __lcd_write_data
0001d7 8059      	LDD  R5,Y+1
0001d8 8048      	LDD  R4,Y+0
0001d9 9622      	ADIW R28,2
0001da 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0001db e0a2      	LDI  R26,LOW(2)
0001dc 940e 0408 	CALL SUBOPT_0x2
0001de e0ac      	LDI  R26,LOW(12)
0001df dfe2      	RCALL __lcd_write_data
0001e0 e0a1      	LDI  R26,LOW(1)
0001e1 940e 0408 	CALL SUBOPT_0x2
0001e3 e0e0      	LDI  R30,LOW(0)
0001e4 2e4e      	MOV  R4,R30
0001e5 2e5e      	MOV  R5,R30
0001e6 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0001e7 93aa      	ST   -Y,R26
0001e8 81a8      	LD   R26,Y
0001e9 30aa      	CPI  R26,LOW(0xA)
0001ea f011      	BREQ _0x2000011
0001eb 1457      	CP   R5,R7
0001ec f048      	BRLO _0x2000010
                 _0x2000011:
0001ed e0e0      	LDI  R30,LOW(0)
0001ee 93ea      	ST   -Y,R30
0001ef 9443      	INC  R4
0001f0 2da4      	MOV  R26,R4
0001f1 dfdc      	RCALL _lcd_gotoxy
0001f2 81a8      	LD   R26,Y
0001f3 30aa      	CPI  R26,LOW(0xA)
0001f4 f409      	BRNE _0x2000013
0001f5 c044      	RJMP _0x2080002
                 _0x2000013:
                 _0x2000010:
0001f6 9453      	INC  R5
0001f7 9a96      	SBI  0x12,6
0001f8 81a8      	LD   R26,Y
0001f9 dfc8      	RCALL __lcd_write_data
0001fa 9896      	CBI  0x12,6
0001fb c03e      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0001fc 93ba      	ST   -Y,R27
0001fd 93aa      	ST   -Y,R26
0001fe 931a      	ST   -Y,R17
                 _0x2000014:
0001ff 81a9      	LDD  R26,Y+1
000200 81ba      	LDD  R27,Y+1+1
000201 91ed      	LD   R30,X+
000202 83a9      	STD  Y+1,R26
000203 83ba      	STD  Y+1+1,R27
000204 2f1e      	MOV  R17,R30
000205 30e0      	CPI  R30,0
000206 f019      	BREQ _0x2000016
000207 2fa1      	MOV  R26,R17
000208 dfde      	RCALL _lcd_putchar
000209 cff5      	RJMP _0x2000014
                 _0x2000016:
00020a 8118      	LDD  R17,Y+0
00020b 9623      	ADIW R28,3
00020c 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00020d 93aa      	ST   -Y,R26
00020e 9a8b      	SBI  0x11,3
00020f 9a8a      	SBI  0x11,2
000210 9a89      	SBI  0x11,1
000211 9a88      	SBI  0x11,0
000212 9a8c      	SBI  0x11,4
000213 9a8e      	SBI  0x11,6
000214 9a8d      	SBI  0x11,5
000215 9894      	CBI  0x12,4
000216 9896      	CBI  0x12,6
000217 9895      	CBI  0x12,5
000218 8078      	LDD  R7,Y+0
000219 81e8      	LD   R30,Y
00021a 58e0      	SUBI R30,-LOW(128)
                +
00021b 93e0 0162+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00021d 81e8      	LD   R30,Y
00021e 54e0      	SUBI R30,-LOW(192)
                +
00021f 93e0 0163+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000221 e1a4      	LDI  R26,LOW(20)
000222 e0b0      	LDI  R27,0
000223 940e 0442 	CALL _delay_ms
000225 940e 040e 	CALL SUBOPT_0x3
000227 940e 040e 	CALL SUBOPT_0x3
000229 940e 040e 	CALL SUBOPT_0x3
00022b e2a0      	LDI  R26,LOW(32)
00022c df70      	RCALL __lcd_write_nibble_G100
                +
00022d ec88     +LDI R24 , LOW ( 200 )
00022e e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00022f 9701     +SBIW R24 , 1
000230 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000231 e2a8      	LDI  R26,LOW(40)
000232 df8f      	RCALL __lcd_write_data
000233 e0a4      	LDI  R26,LOW(4)
000234 df8d      	RCALL __lcd_write_data
000235 e8a5      	LDI  R26,LOW(133)
000236 df8b      	RCALL __lcd_write_data
000237 e0a6      	LDI  R26,LOW(6)
000238 df89      	RCALL __lcd_write_data
000239 dfa1      	RCALL _lcd_clear
                 _0x2080002:
00023a 9621      	ADIW R28,1
00023b 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
00023c 93ba      	ST   -Y,R27
00023d 93aa      	ST   -Y,R26
00023e 931a      	ST   -Y,R17
00023f 930a      	ST   -Y,R16
000240 81aa      	LDD  R26,Y+2
000241 81bb      	LDD  R27,Y+2+1
000242 9612      	ADIW R26,2
000243 940e 0461 	CALL __GETW1P
000245 9730      	SBIW R30,0
000246 f159      	BREQ _0x2020010
000247 81aa      	LDD  R26,Y+2
000248 81bb      	LDD  R27,Y+2+1
000249 9614      	ADIW R26,4
00024a 940e 0461 	CALL __GETW1P
00024c 018f      	MOVW R16,R30
00024d 9730      	SBIW R30,0
00024e f061      	BREQ _0x2020012
                +
00024f 3002     +CPI R16 , LOW ( 2 )
000250 e0e0     +LDI R30 , HIGH ( 2 )
000251 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000252 f098      	BRLO _0x2020013
000253 01f8      	MOVW R30,R16
000254 9731      	SBIW R30,1
000255 018f      	MOVW R16,R30
                +
000256 81aa     +LDD R26 , Y + 2
000257 81bb     +LDD R27 , Y + 2 + 1
000258 9614     +ADIW R26 , 4
000259 93ed     +ST X + , R30
00025a 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
00025b 81aa      	LDD  R26,Y+2
00025c 81bb      	LDD  R27,Y+2+1
00025d 9612      	ADIW R26,2
00025e 91ed      	LD   R30,X+
00025f 91fd      	LD   R31,X+
000260 9631      	ADIW R30,1
000261 93fe      	ST   -X,R31
000262 93ee      	ST   -X,R30
000263 9731      	SBIW R30,1
000264 81ac      	LDD  R26,Y+4
000265 83a0      	STD  Z+0,R26
                 _0x2020013:
000266 81aa      	LDD  R26,Y+2
000267 81bb      	LDD  R27,Y+2+1
000268 940e 0461 	CALL __GETW1P
00026a 23ff      	TST  R31
00026b f02a      	BRMI _0x2020014
00026c 91ed      	LD   R30,X+
00026d 91fd      	LD   R31,X+
00026e 9631      	ADIW R30,1
00026f 93fe      	ST   -X,R31
000270 93ee      	ST   -X,R30
                 _0x2020014:
000271 c006      	RJMP _0x2020015
                 _0x2020010:
000272 81aa      	LDD  R26,Y+2
000273 81bb      	LDD  R27,Y+2+1
000274 efef      	LDI  R30,LOW(65535)
000275 efff      	LDI  R31,HIGH(65535)
000276 93ed      	ST   X+,R30
000277 93fc      	ST   X,R31
                 _0x2020015:
000278 8119      	LDD  R17,Y+1
000279 8108      	LDD  R16,Y+0
00027a 9625      	ADIW R28,5
00027b 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
00027c 93ba      	ST   -Y,R27
00027d 93aa      	ST   -Y,R26
00027e 9726      	SBIW R28,6
00027f 940e 046e 	CALL __SAVELOCR6
000281 e010      	LDI  R17,0
000282 85ac      	LDD  R26,Y+12
000283 85bd      	LDD  R27,Y+12+1
000284 e0e0      	LDI  R30,LOW(0)
000285 e0f0      	LDI  R31,HIGH(0)
000286 93ed      	ST   X+,R30
000287 93fc      	ST   X,R31
                 _0x2020016:
000288 89ea      	LDD  R30,Y+18
000289 89fb      	LDD  R31,Y+18+1
00028a 9631      	ADIW R30,1
00028b 8bea      	STD  Y+18,R30
00028c 8bfb      	STD  Y+18+1,R31
00028d 9731      	SBIW R30,1
00028e 91e4      	LPM  R30,Z
00028f 2f2e      	MOV  R18,R30
000290 30e0      	CPI  R30,0
000291 f409      	BRNE PC+2
000292 c115      	RJMP _0x2020018
000293 2fe1      	MOV  R30,R17
000294 30e0      	CPI  R30,0
000295 f439      	BRNE _0x202001C
000296 3225      	CPI  R18,37
000297 f411      	BRNE _0x202001D
000298 e011      	LDI  R17,LOW(1)
000299 c002      	RJMP _0x202001E
                 _0x202001D:
00029a 940e 0416 	CALL SUBOPT_0x4
                 _0x202001E:
00029c c10a      	RJMP _0x202001B
                 _0x202001C:
00029d 30e1      	CPI  R30,LOW(0x1)
00029e f4a9      	BRNE _0x202001F
00029f 3225      	CPI  R18,37
0002a0 f419      	BRNE _0x2020020
0002a1 940e 0416 	CALL SUBOPT_0x4
0002a3 c102      	RJMP _0x20200CC
                 _0x2020020:
0002a4 e012      	LDI  R17,LOW(2)
0002a5 e040      	LDI  R20,LOW(0)
0002a6 e000      	LDI  R16,LOW(0)
0002a7 322d      	CPI  R18,45
0002a8 f411      	BRNE _0x2020021
0002a9 e001      	LDI  R16,LOW(1)
0002aa c0fc      	RJMP _0x202001B
                 _0x2020021:
0002ab 322b      	CPI  R18,43
0002ac f411      	BRNE _0x2020022
0002ad e24b      	LDI  R20,LOW(43)
0002ae c0f8      	RJMP _0x202001B
                 _0x2020022:
0002af 3220      	CPI  R18,32
0002b0 f411      	BRNE _0x2020023
0002b1 e240      	LDI  R20,LOW(32)
0002b2 c0f4      	RJMP _0x202001B
                 _0x2020023:
0002b3 c002      	RJMP _0x2020024
                 _0x202001F:
0002b4 30e2      	CPI  R30,LOW(0x2)
0002b5 f439      	BRNE _0x2020025
                 _0x2020024:
0002b6 e050      	LDI  R21,LOW(0)
0002b7 e013      	LDI  R17,LOW(3)
0002b8 3320      	CPI  R18,48
0002b9 f411      	BRNE _0x2020026
0002ba 6800      	ORI  R16,LOW(128)
0002bb c0eb      	RJMP _0x202001B
                 _0x2020026:
0002bc c003      	RJMP _0x2020027
                 _0x2020025:
0002bd 30e3      	CPI  R30,LOW(0x3)
0002be f009      	BREQ PC+2
0002bf c0e7      	RJMP _0x202001B
                 _0x2020027:
0002c0 3320      	CPI  R18,48
0002c1 f010      	BRLO _0x202002A
0002c2 332a      	CPI  R18,58
0002c3 f008      	BRLO _0x202002B
                 _0x202002A:
0002c4 c007      	RJMP _0x2020029
                 _0x202002B:
0002c5 e0aa      	LDI  R26,LOW(10)
0002c6 9f5a      	MUL  R21,R26
0002c7 2d50      	MOV  R21,R0
0002c8 2fe2      	MOV  R30,R18
0002c9 53e0      	SUBI R30,LOW(48)
0002ca 0f5e      	ADD  R21,R30
0002cb c0db      	RJMP _0x202001B
                 _0x2020029:
0002cc 2fe2      	MOV  R30,R18
0002cd 36e3      	CPI  R30,LOW(0x63)
0002ce f449      	BRNE _0x202002F
0002cf 940e 041d 	CALL SUBOPT_0x5
0002d1 89e8      	LDD  R30,Y+16
0002d2 89f9      	LDD  R31,Y+16+1
0002d3 81a4      	LDD  R26,Z+4
0002d4 93aa      	ST   -Y,R26
0002d5 940e 0423 	CALL SUBOPT_0x6
0002d7 c0ce      	RJMP _0x2020030
                 _0x202002F:
0002d8 37e3      	CPI  R30,LOW(0x73)
0002d9 f441      	BRNE _0x2020032
0002da 940e 041d 	CALL SUBOPT_0x5
0002dc 940e 0429 	CALL SUBOPT_0x7
0002de 940e 03e4 	CALL _strlen
0002e0 2f1e      	MOV  R17,R30
0002e1 c00a      	RJMP _0x2020033
                 _0x2020032:
0002e2 37e0      	CPI  R30,LOW(0x70)
0002e3 f461      	BRNE _0x2020035
0002e4 940e 041d 	CALL SUBOPT_0x5
0002e6 940e 0429 	CALL SUBOPT_0x7
0002e8 940e 03f0 	CALL _strlenf
0002ea 2f1e      	MOV  R17,R30
0002eb 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0002ec 6002      	ORI  R16,LOW(2)
0002ed 770f      	ANDI R16,LOW(127)
0002ee e030      	LDI  R19,LOW(0)
0002ef c034      	RJMP _0x2020036
                 _0x2020035:
0002f0 36e4      	CPI  R30,LOW(0x64)
0002f1 f011      	BREQ _0x2020039
0002f2 36e9      	CPI  R30,LOW(0x69)
0002f3 f411      	BRNE _0x202003A
                 _0x2020039:
0002f4 6004      	ORI  R16,LOW(4)
0002f5 c002      	RJMP _0x202003B
                 _0x202003A:
0002f6 37e5      	CPI  R30,LOW(0x75)
0002f7 f431      	BRNE _0x202003C
                 _0x202003B:
0002f8 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
0002f9 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0002fa 83ee      	STD  Y+6,R30
0002fb 83ff      	STD  Y+6+1,R31
0002fc e015      	LDI  R17,LOW(5)
0002fd c00c      	RJMP _0x202003D
                 _0x202003C:
0002fe 35e8      	CPI  R30,LOW(0x58)
0002ff f411      	BRNE _0x202003F
000300 6008      	ORI  R16,LOW(8)
000301 c003      	RJMP _0x2020040
                 _0x202003F:
000302 37e8      	CPI  R30,LOW(0x78)
000303 f009      	BREQ PC+2
000304 c0a1      	RJMP _0x2020071
                 _0x2020040:
000305 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000306 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000307 83ee      	STD  Y+6,R30
000308 83ff      	STD  Y+6+1,R31
000309 e014      	LDI  R17,LOW(4)
                 _0x202003D:
00030a ff02      	SBRS R16,2
00030b c014      	RJMP _0x2020042
00030c 940e 041d 	CALL SUBOPT_0x5
00030e 940e 0433 	CALL SUBOPT_0x8
000310 85ab      	LDD  R26,Y+11
000311 23aa      	TST  R26
000312 f43a      	BRPL _0x2020043
000313 85ea      	LDD  R30,Y+10
000314 85fb      	LDD  R31,Y+10+1
000315 940e 0450 	CALL __ANEGW1
000317 87ea      	STD  Y+10,R30
000318 87fb      	STD  Y+10+1,R31
000319 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00031a 3040      	CPI  R20,0
00031b f011      	BREQ _0x2020044
00031c 5f1f      	SUBI R17,-LOW(1)
00031d c001      	RJMP _0x2020045
                 _0x2020044:
00031e 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00031f c004      	RJMP _0x2020046
                 _0x2020042:
000320 940e 041d 	CALL SUBOPT_0x5
000322 940e 0433 	CALL SUBOPT_0x8
                 _0x2020046:
                 _0x2020036:
000324 fd00      	SBRC R16,0
000325 c011      	RJMP _0x2020047
                 _0x2020048:
000326 1715      	CP   R17,R21
000327 f478      	BRSH _0x202004A
000328 ff07      	SBRS R16,7
000329 c008      	RJMP _0x202004B
00032a ff02      	SBRS R16,2
00032b c004      	RJMP _0x202004C
00032c 7f0b      	ANDI R16,LOW(251)
00032d 2f24      	MOV  R18,R20
00032e 5011      	SUBI R17,LOW(1)
00032f c001      	RJMP _0x202004D
                 _0x202004C:
000330 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000331 c001      	RJMP _0x202004E
                 _0x202004B:
000332 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000333 940e 0416 	CALL SUBOPT_0x4
000335 5051      	SUBI R21,LOW(1)
000336 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000337 2f31      	MOV  R19,R17
000338 ff01      	SBRS R16,1
000339 c017      	RJMP _0x202004F
                 _0x2020050:
00033a 3030      	CPI  R19,0
00033b f0a1      	BREQ _0x2020052
00033c ff03      	SBRS R16,3
00033d c006      	RJMP _0x2020053
00033e 81ee      	LDD  R30,Y+6
00033f 81ff      	LDD  R31,Y+6+1
000340 9125      	LPM  R18,Z+
000341 83ee      	STD  Y+6,R30
000342 83ff      	STD  Y+6+1,R31
000343 c005      	RJMP _0x2020054
                 _0x2020053:
000344 81ae      	LDD  R26,Y+6
000345 81bf      	LDD  R27,Y+6+1
000346 912d      	LD   R18,X+
000347 83ae      	STD  Y+6,R26
000348 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000349 940e 0416 	CALL SUBOPT_0x4
00034b 3050      	CPI  R21,0
00034c f009      	BREQ _0x2020055
00034d 5051      	SUBI R21,LOW(1)
                 _0x2020055:
00034e 5031      	SUBI R19,LOW(1)
00034f cfea      	RJMP _0x2020050
                 _0x2020052:
000350 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000351 e320      	LDI  R18,LOW(48)
000352 81ee      	LDD  R30,Y+6
000353 81ff      	LDD  R31,Y+6+1
000354 940e 0465 	CALL __GETW1PF
000356 87e8      	STD  Y+8,R30
000357 87f9      	STD  Y+8+1,R31
000358 81ee      	LDD  R30,Y+6
000359 81ff      	LDD  R31,Y+6+1
00035a 9632      	ADIW R30,2
00035b 83ee      	STD  Y+6,R30
00035c 83ff      	STD  Y+6+1,R31
                 _0x202005A:
00035d 85e8      	LDD  R30,Y+8
00035e 85f9      	LDD  R31,Y+8+1
00035f 85aa      	LDD  R26,Y+10
000360 85bb      	LDD  R27,Y+10+1
000361 17ae      	CP   R26,R30
000362 07bf      	CPC  R27,R31
000363 f050      	BRLO _0x202005C
000364 5f2f      	SUBI R18,-LOW(1)
000365 85a8      	LDD  R26,Y+8
000366 85b9      	LDD  R27,Y+8+1
000367 85ea      	LDD  R30,Y+10
000368 85fb      	LDD  R31,Y+10+1
000369 1bea      	SUB  R30,R26
00036a 0bfb      	SBC  R31,R27
00036b 87ea      	STD  Y+10,R30
00036c 87fb      	STD  Y+10+1,R31
00036d cfef      	RJMP _0x202005A
                 _0x202005C:
00036e 332a      	CPI  R18,58
00036f f028      	BRLO _0x202005D
000370 ff03      	SBRS R16,3
000371 c002      	RJMP _0x202005E
000372 5f29      	SUBI R18,-LOW(7)
000373 c001      	RJMP _0x202005F
                 _0x202005E:
000374 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000375 fd04      	SBRC R16,4
000376 c01a      	RJMP _0x2020061
000377 3321      	CPI  R18,49
000378 f420      	BRSH _0x2020063
000379 85a8      	LDD  R26,Y+8
00037a 85b9      	LDD  R27,Y+8+1
00037b 9711      	SBIW R26,1
00037c f409      	BRNE _0x2020062
                 _0x2020063:
00037d c009      	RJMP _0x20200CD
                 _0x2020062:
00037e 1753      	CP   R21,R19
00037f f010      	BRLO _0x2020067
000380 ff00      	SBRS R16,0
000381 c001      	RJMP _0x2020068
                 _0x2020067:
000382 c013      	RJMP _0x2020066
                 _0x2020068:
000383 e220      	LDI  R18,LOW(32)
000384 ff07      	SBRS R16,7
000385 c00b      	RJMP _0x2020069
000386 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000387 6100      	ORI  R16,LOW(16)
000388 ff02      	SBRS R16,2
000389 c007      	RJMP _0x202006A
00038a 7f0b      	ANDI R16,LOW(251)
00038b 934a      	ST   -Y,R20
00038c 940e 0423 	CALL SUBOPT_0x6
00038e 3050      	CPI  R21,0
00038f f009      	BREQ _0x202006B
000390 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000391 940e 0416 	CALL SUBOPT_0x4
000393 3050      	CPI  R21,0
000394 f009      	BREQ _0x202006C
000395 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000396 5031      	SUBI R19,LOW(1)
000397 85a8      	LDD  R26,Y+8
000398 85b9      	LDD  R27,Y+8+1
000399 9712      	SBIW R26,2
00039a f008      	BRLO _0x2020059
00039b cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
00039c ff00      	SBRS R16,0
00039d c008      	RJMP _0x202006D
                 _0x202006E:
00039e 3050      	CPI  R21,0
00039f f031      	BREQ _0x2020070
0003a0 5051      	SUBI R21,LOW(1)
0003a1 e2e0      	LDI  R30,LOW(32)
0003a2 93ea      	ST   -Y,R30
0003a3 940e 0423 	CALL SUBOPT_0x6
0003a5 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0003a6 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0003a7 cee0      	RJMP _0x2020016
                 _0x2020018:
0003a8 85ac      	LDD  R26,Y+12
0003a9 85bd      	LDD  R27,Y+12+1
0003aa 940e 0461 	CALL __GETW1P
0003ac 940e 0475 	CALL __LOADLOCR6
0003ae 9664      	ADIW R28,20
0003af 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0003b0 92ff      	PUSH R15
0003b1 2ef8      	MOV  R15,R24
0003b2 9726      	SBIW R28,6
0003b3 940e 0470 	CALL __SAVELOCR4
0003b5 940e 043b 	CALL SUBOPT_0x9
0003b7 9730      	SBIW R30,0
0003b8 f419      	BRNE _0x2020072
0003b9 efef      	LDI  R30,LOW(65535)
0003ba efff      	LDI  R31,HIGH(65535)
0003bb c023      	RJMP _0x2080001
                 _0x2020072:
0003bc 01de      	MOVW R26,R28
0003bd 9616      	ADIW R26,6
0003be 940e 044c 	CALL __ADDW2R15
0003c0 018d      	MOVW R16,R26
0003c1 940e 043b 	CALL SUBOPT_0x9
0003c3 83ee      	STD  Y+6,R30
0003c4 83ff      	STD  Y+6+1,R31
0003c5 e0e0      	LDI  R30,LOW(0)
0003c6 87e8      	STD  Y+8,R30
0003c7 87e9      	STD  Y+8+1,R30
0003c8 01de      	MOVW R26,R28
0003c9 961a      	ADIW R26,10
0003ca 940e 044c 	CALL __ADDW2R15
0003cc 940e 0461 	CALL __GETW1P
0003ce 93fa      	ST   -Y,R31
0003cf 93ea      	ST   -Y,R30
0003d0 931a      	ST   -Y,R17
0003d1 930a      	ST   -Y,R16
0003d2 e3ec      	LDI  R30,LOW(_put_buff_G101)
0003d3 e0f2      	LDI  R31,HIGH(_put_buff_G101)
0003d4 93fa      	ST   -Y,R31
0003d5 93ea      	ST   -Y,R30
0003d6 01de      	MOVW R26,R28
0003d7 961a      	ADIW R26,10
0003d8 dea3      	RCALL __print_G101
0003d9 019f      	MOVW R18,R30
0003da 81ae      	LDD  R26,Y+6
0003db 81bf      	LDD  R27,Y+6+1
0003dc e0e0      	LDI  R30,LOW(0)
0003dd 93ec      	ST   X,R30
0003de 01f9      	MOVW R30,R18
                 _0x2080001:
0003df 940e 0477 	CALL __LOADLOCR4
0003e1 962a      	ADIW R28,10
0003e2 90ff      	POP  R15
0003e3 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0003e4 93ba      	ST   -Y,R27
0003e5 93aa      	ST   -Y,R26
0003e6 91a9          ld   r26,y+
0003e7 91b9          ld   r27,y+
0003e8 27ee          clr  r30
0003e9 27ff          clr  r31
                 strlen0:
0003ea 916d          ld   r22,x+
0003eb 2366          tst  r22
0003ec f011          breq strlen1
0003ed 9631          adiw r30,1
0003ee cffb          rjmp strlen0
                 strlen1:
0003ef 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0003f0 93ba      	ST   -Y,R27
0003f1 93aa      	ST   -Y,R26
0003f2 27aa          clr  r26
0003f3 27bb          clr  r27
0003f4 91e9          ld   r30,y+
0003f5 91f9          ld   r31,y+
                 strlenf0:
0003f6 9005      	lpm  r0,z+
0003f7 2000          tst  r0
0003f8 f011          breq strlenf1
0003f9 9611          adiw r26,1
0003fa cffb          rjmp strlenf0
                 strlenf1:
0003fb 01fd          movw r30,r26
0003fc 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
000160           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
0003fd e0e0      	LDI  R30,LOW(0)
0003fe 83e8      	ST   Y,R30
0003ff 83e9      	STD  Y+1,R30
000400 83ea      	STD  Y+2,R30
000401 83eb      	STD  Y+3,R30
000402 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000403 940e 045c 	CALL __CWD1
000405 940e 0469 	CALL __PUTPARD1
000407 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000408 940e 01c2 	CALL __lcd_write_data
00040a e0a3      	LDI  R26,LOW(3)
00040b e0b0      	LDI  R27,0
00040c 940c 0442 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3:
00040e e3a0      	LDI  R26,LOW(48)
00040f 940e 019d 	CALL __lcd_write_nibble_G100
                +
000411 ec88     +LDI R24 , LOW ( 200 )
000412 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000413 9701     +SBIW R24 , 1
000414 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000415 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4:
000416 932a      	ST   -Y,R18
000417 85ad      	LDD  R26,Y+13
000418 85be      	LDD  R27,Y+13+1
000419 85ef      	LDD  R30,Y+15
00041a 89f8      	LDD  R31,Y+15+1
00041b 9509      	ICALL
00041c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
00041d 89e8      	LDD  R30,Y+16
00041e 89f9      	LDD  R31,Y+16+1
00041f 9734      	SBIW R30,4
000420 8be8      	STD  Y+16,R30
000421 8bf9      	STD  Y+16+1,R31
000422 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
000423 85ad      	LDD  R26,Y+13
000424 85be      	LDD  R27,Y+13+1
000425 85ef      	LDD  R30,Y+15
000426 89f8      	LDD  R31,Y+15+1
000427 9509      	ICALL
000428 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x7:
000429 89a8      	LDD  R26,Y+16
00042a 89b9      	LDD  R27,Y+16+1
00042b 9614      	ADIW R26,4
00042c 940e 0461 	CALL __GETW1P
00042e 83ee      	STD  Y+6,R30
00042f 83ff      	STD  Y+6+1,R31
000430 81ae      	LDD  R26,Y+6
000431 81bf      	LDD  R27,Y+6+1
000432 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
000433 89a8      	LDD  R26,Y+16
000434 89b9      	LDD  R27,Y+16+1
000435 9614      	ADIW R26,4
000436 940e 0461 	CALL __GETW1P
000438 87ea      	STD  Y+10,R30
000439 87fb      	STD  Y+10+1,R31
00043a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
00043b 01de      	MOVW R26,R28
00043c 961c      	ADIW R26,12
00043d 940e 044c 	CALL __ADDW2R15
00043f 940e 0461 	CALL __GETW1P
000441 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000442 9610      	adiw r26,0
000443 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000444 ed80     +LDI R24 , LOW ( 0x7D0 )
000445 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000446 9701     +SBIW R24 , 1
000447 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000448 95a8      	wdr
000449 9711      	sbiw r26,1
00044a f7c9      	brne __delay_ms0
                 __delay_ms1:
00044b 9508      	ret
                 
                 __ADDW2R15:
00044c 2400      	CLR  R0
00044d 0daf      	ADD  R26,R15
00044e 1db0      	ADC  R27,R0
00044f 9508      	RET
                 
                 __ANEGW1:
000450 95f1      	NEG  R31
000451 95e1      	NEG  R30
000452 40f0      	SBCI R31,0
000453 9508      	RET
                 
                 __LSLB12:
000454 23ee      	TST  R30
000455 2e0e      	MOV  R0,R30
000456 2fea      	MOV  R30,R26
000457 f019      	BREQ __LSLB12R
                 __LSLB12L:
000458 0fee      	LSL  R30
000459 940a      	DEC  R0
00045a f7e9      	BRNE __LSLB12L
                 __LSLB12R:
00045b 9508      	RET
                 
                 __CWD1:
00045c 2f6f      	MOV  R22,R31
00045d 0f66      	ADD  R22,R22
00045e 0b66      	SBC  R22,R22
00045f 2f76      	MOV  R23,R22
000460 9508      	RET
                 
                 __GETW1P:
000461 91ed      	LD   R30,X+
000462 91fc      	LD   R31,X
000463 9711      	SBIW R26,1
000464 9508      	RET
                 
                 __GETW1PF:
000465 9005      	LPM  R0,Z+
000466 91f4      	LPM  R31,Z
000467 2de0      	MOV  R30,R0
000468 9508      	RET
                 
                 __PUTPARD1:
000469 937a      	ST   -Y,R23
00046a 936a      	ST   -Y,R22
00046b 93fa      	ST   -Y,R31
00046c 93ea      	ST   -Y,R30
00046d 9508      	RET
                 
                 __SAVELOCR6:
00046e 935a      	ST   -Y,R21
                 __SAVELOCR5:
00046f 934a      	ST   -Y,R20
                 __SAVELOCR4:
000470 933a      	ST   -Y,R19
                 __SAVELOCR3:
000471 932a      	ST   -Y,R18
                 __SAVELOCR2:
000472 931a      	ST   -Y,R17
000473 930a      	ST   -Y,R16
000474 9508      	RET
                 
                 __LOADLOCR6:
000475 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000476 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000477 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000478 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000479 8119      	LDD  R17,Y+1
00047a 8108      	LD   R16,Y
00047b 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  15 r1 :   3 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  38 r17:  29 r18:  38 r19:  15 r20:  22 r21:  29 r22:  13 r23:   2 
r24:  31 r25:   5 r26: 129 r27:  49 r28:  21 r29:   1 r30: 234 r31:  87 
x  :  29 y  : 240 z  :  16 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   9 
adiw  :  34 and   :   0 andi  :   8 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  23 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  12 
brlt  :   0 brmi  :   1 brne  :  38 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  60 
cbi   :  12 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   5 cpc   :   7 cpi   :  38 cpse  :   0 dec   :  10 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   4 inc   :   2 jmp   :  23 ld    :  32 ldd   : 115 ldi   : 131 
lds   :   0 lpm   :  14 lsl   :   1 lsr   :   0 mov   :  24 movw  :  23 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   6 out   :   9 pop   :   5 push  :   5 rcall :  19 ret   :  29 
reti  :   0 rjmp  :  81 rol   :   0 ror   :   0 sbc   :   2 sbci  :   6 
sbi   :  15 sbic  :   1 sbis  :   7 sbiw  :  28 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  72 std   :  54 sts   :   2 sub   :   1 subi  :  20 swap  :   1 
tst   :   5 wdr   :   1 
Instructions used: 56 out of 116 (48.3%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0008f8   2226     70   2296   16384  14.0%
[.dseg] 0x000060 0x000164      0      4      4    1024   0.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
